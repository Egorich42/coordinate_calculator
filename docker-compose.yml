version: '3'
services:
  db:
    image: postgres:16.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - backend_network
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    restart: always
    expose:
      - "5432"
        
  app:
    build: ./app
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_PORT: ${DB_PORT}
      APP_PORT: ${APP_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - backend_network

  tests:
    build: ./app
    entrypoint: ["/bin/bash", "-c"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_PORT: ${DB_PORT}
      APP_PORT: ${APP_PORT}
      PYTHONPATH: /app
    volumes:
      - .:/app
    command: pytest
    depends_on:
      - db
    networks:
      - backend_network

networks:
  backend_network:

volumes:
  db_data: